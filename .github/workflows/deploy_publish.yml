name: deploy publish

on:
  push:
    branches:
      - master

jobs:
  deploy_pulish:
    runs-on: ubuntu-18.04
    steps:
      - name: Check out Repository Code to Workflow
        uses: actions/checkout@v2 # checkout 仓库代码到 Workflow 工作区
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          # actions/setup-node@v2 底层使用了actions/cache
          # 缓存yarn下载的依赖项，单项目仓库下会依据package-lock.josn或yarn.lock
          # 更多的缓存技巧可以参考ant-design的test.yml
          cache: 'yarn'
      # 如果没有安装node，默认支持npm、yarn等包管理器
      - run: yarn install
      - run: yarn run docs:build
      - run: yarn run build

      - name: Deploy Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # peaceiris/actions-gh-pages：GITHUB_TOKEN 由 Github Actions Runner自动生成
          publish_dir: ./docs-dist

      - name: Sync to Gitee
        uses: wearerequired/git-mirror-action@master
        env:
          # 注意在Github Settings->Secrets 配置 GITEE_RSA_PRIVATE_KEY
          SSH_PRIVATE_KEY: ${{ secrets.GITEE_RSA_PRIVATE_KEY }}
        with:
          # 注意替换为你的 GitHub 源仓库地址
          source-repo: git@github.com:Jay-Ohhh/anchor-scroll-menu.git
          # 注意替换为你的 Gitee 目标仓库地址
          destination-repo: git@gitee.com:Jay_Ohhh/anchor-scroll-menu.git

      # 需要关注Gitee微信公众号，绑定gitee账号
      - name: Deploy Gitee Pages
        uses: yanglbme/gitee-pages-action@main
        with:
          # 注意替换为你的 Gitee 用户名
          gitee-username: Jay_Ohhh
          # 注意在 Settings->Secrets 配置 GITEE_PASSWORD
          gitee-password: ${{ secrets.GITEE_PASSWORD }}
          # 注意替换为你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错
          gitee-repo: Jay_Ohhh/anchor-scroll-menu
          # 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）
          branch: gh-pages

      # 手动修改pacakeg.json version(npm版本)比较好，因为自己比较好确定patch, minor or major
      # 也可以尝试使用action：npm version and publish
      - name: npm publish
        id: publish
        uses: JS-DevTools/npm-publish@v1 # 会自动检测版本，package.json的version比npm上的版本号新才会publish
        with:
          token: ${{ secrets.NPM_TOKEN }}

      - if: steps.publish.outputs.type != 'none'
        run: |
          echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"
